/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CreateChangeStaffView.java
 *
 * Created on 19-jan-2010, 10:09:59
 */
package View;

import Controller.InputChecker;
import Model.AirMarshal;
import Model.Airport;
import Model.Nationality;
import Model.PersonalType;
import Model.Rank;
import Model.Staff;
import Model.User;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Jeroen
 */
public class CreateChangeStaffView extends javax.swing.JInternalFrame {

    Staff staff = null;

    /** Creates new form CreateChangeStaffView */
    public CreateChangeStaffView(Staff s) {
	initComponents();

	PersonalType stypes[] = PersonalType.values();
	for (PersonalType st : stypes) {
	    cmbBoxPersonalTypes.addItem(st);
	}

	ArrayList<Airport> airports = Controller.Controller.Instance().getAirports();

	for (Airport a : airports) {
	    cmbBoxAirports.addItem(a);
	}
	
	Nationality snationalities[] = Nationality.values();
	for (Nationality sn : snationalities) {
	    cmbBoxNationality.addItem(sn);
	}

	staff = s;
	if (s != null) {
	    txtFieldID.setEditable(false);
	    Fill(s);
	}
    }

    private void Fill(Staff s) {
	txtFieldID.setText("" + s.getNumber());
	txtFieldName.setText(s.getName());
	cmbBoxPersonalTypes.setSelectedItem(s.getType());
	cmbBoxAirports.setSelectedItem(s.getPrimaryAirport());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbBoxPersonalTypes = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txtFieldID = new javax.swing.JTextField();
        Name = new javax.swing.JLabel();
        txtFieldName = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblErrorMessage = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbBoxAirports = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtFieldBadgeNumber = new javax.swing.JTextField();
        cmbBoxNationality = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setName("Form"); // NOI18N
        setPreferredSize(new java.awt.Dimension(630, 300));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(flyaway.FlyAWayApp.class).getContext().getResourceMap(CreateChangeStaffView.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        cmbBoxPersonalTypes.setName("cmbBoxPersonalTypes"); // NOI18N
        cmbBoxPersonalTypes.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbBoxPersonalTypesPropertyChange(evt);
            }
        });

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        txtFieldID.setText(resourceMap.getString("txtFieldID.text")); // NOI18N
        txtFieldID.setName("txtFieldID"); // NOI18N

        Name.setText(resourceMap.getString("Name.text")); // NOI18N
        Name.setName("Name"); // NOI18N

        txtFieldName.setText(resourceMap.getString("txtFieldName.text")); // NOI18N
        txtFieldName.setName("txtFieldName"); // NOI18N

        btnSave.setText(resourceMap.getString("btnSave.text")); // NOI18N
        btnSave.setName("btnSave"); // NOI18N
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblErrorMessage.setName("lblErrorMessage"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        cmbBoxAirports.setName("cmbBoxAirports"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        jLabel4.setVisible(false);

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        jLabel5.setVisible(false);

        txtFieldBadgeNumber.setName("txtFieldBadgeNumber"); // NOI18N
        txtFieldBadgeNumber.setVisible(false);

        cmbBoxNationality.setName("cmbBoxNationality"); // NOI18N
        cmbBoxNationality.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel)
                .addGap(376, 376, 376))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel4)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(Name)
                            .addComponent(jLabel2)))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbBoxNationality, 0, 419, Short.MAX_VALUE)
                            .addComponent(txtFieldName, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                            .addComponent(txtFieldID, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                            .addComponent(cmbBoxAirports, 0, 419, Short.MAX_VALUE)
                            .addComponent(cmbBoxPersonalTypes, 0, 419, Short.MAX_VALUE)
                            .addComponent(txtFieldBadgeNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE))
                        .addGap(78, 78, 78))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Name))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbBoxPersonalTypes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbBoxAirports, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFieldBadgeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbBoxNationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
	String name = txtFieldName.getText();
	int staffId = -1;
	PersonalType st = (PersonalType) cmbBoxPersonalTypes.getSelectedItem();
	Airport primaryAirport = (Airport) cmbBoxAirports.getSelectedItem();
	int badgeNumber = -1;
	String nationality = cmbBoxNationality.getSelectedItem().toString();

	lblErrorMessage.setText("");
	String errorMessage = "<html>";

	InputChecker ip = new InputChecker();

	try {
	    staffId = Integer.parseInt(txtFieldID.getText());

	    if (Controller.Controller.Instance().getStaffById(staffId) != null && staff == null) {
		errorMessage += "Staffmember already exists with personal id:" + staffId + "<br>";
	    }
	} catch (NumberFormatException exception) {
	    errorMessage += "Personal id is not a valid number <br>";
	}

	if (!ip.checkText(name, false, true)) {
	    errorMessage += "Please enter a valid name first <br>";
	}

	if (!ip.checkMaxLength(name, 50)) {
	    errorMessage += "Name has a maximum length of 50 chars <br>";
	}
	
	if (st == PersonalType.AirMarshal) {
	    try {
		badgeNumber = Integer.parseInt(txtFieldBadgeNumber.getText());

		if (Controller.Controller.Instance().getAirMarshalByBadgeNumber(badgeNumber) != null && staff == null) {
		    errorMessage += "Staffmember already exists with Badgenumber:" + badgeNumber + "<br>";
		}
	    } catch (NumberFormatException exception) {
		errorMessage += "Badgenumber is not a valid number <br>";
	    }
	}

	errorMessage += "</html>";

	if (errorMessage.equals("<html></html>")) {

	    if (staff == null && st != PersonalType.AirMarshal) {

		staff = new Staff(staffId, st, name, primaryAirport);
		User u = new User("" + staffId, Rank.staff, staff);
		u.setPassword("flyaway", false);

		if (Controller.Controller.Instance().saveObject(staff)) {

		    if (Controller.Controller.Instance().saveObject(u)) {

			JOptionPane.showMessageDialog(this, "Staff " + staff.getName() + " Saved \n User: " + u.getUsername() + " saved");
			this.dispose();
		    } else {
			JOptionPane.showMessageDialog(this, "Error while saving staff");
			this.dispose();
		    }

		} else {
		    JOptionPane.showMessageDialog(this, "Error while saving staff");
		    this.dispose();
		}

	    } else if (staff != null && st != PersonalType.AirMarshal) {

		staff.setName(name);
		staff.setNumber(staffId);
		staff.setType(st);
		staff.setPrimaryAirport(primaryAirport);

		if (Controller.Controller.Instance().updateObject(staff)) {
		    JOptionPane.showMessageDialog(this, "Staff " + staff.getName() + " Saved");
		    this.dispose();
		} else {
		    JOptionPane.showMessageDialog(this, "Error while saving staff");
		    this.dispose();
		}
	    } else if (staff == null && st == PersonalType.AirMarshal) {

		staff = new AirMarshal(badgeNumber, nationality, staffId, st, name, primaryAirport);
		User u = new User("" + staffId, Rank.staff, staff);
		u.setPassword("flyaway", false);

		if (Controller.Controller.Instance().saveObject(staff)) {

		    if (Controller.Controller.Instance().saveObject(u)) {

			JOptionPane.showMessageDialog(this, "Staff " + staff.getName() + " Saved \n User: " + u.getUsername() + " saved");
			this.dispose();
		    } else {
			JOptionPane.showMessageDialog(this, "Error while saving staff");
			this.dispose();
		    }

		} else {
		    JOptionPane.showMessageDialog(this, "Error while saving staff");
		    this.dispose();
		}

	    } else if (staff != null && st == PersonalType.AirMarshal) {
		
		staff = new AirMarshal(badgeNumber, nationality, staffId, st, name, primaryAirport);

		if (Controller.Controller.Instance().updateObject(staff)) {
		    JOptionPane.showMessageDialog(this, "Staff " + staff.getName() + " Saved");
		    this.dispose();
		} else {
		    JOptionPane.showMessageDialog(this, "Error while saving staff");
		    this.dispose();
		}
	    }
	} else {
	    lblErrorMessage.setText(errorMessage);
	}

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
	this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void cmbBoxPersonalTypesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbBoxPersonalTypesPropertyChange
	if(cmbBoxPersonalTypes.getSelectedItem().equals(PersonalType.AirMarshal)) {
	    jLabel4.setVisible(true);
	    jLabel5.setVisible(true);
	    txtFieldBadgeNumber.setVisible(true);
	    cmbBoxNationality.setVisible(true);
	}else{
	    jLabel4.setVisible(false);
	    jLabel5.setVisible(false);
	    txtFieldBadgeNumber.setVisible(false);
	    cmbBoxNationality.setVisible(false);
	}
    }//GEN-LAST:event_cmbBoxPersonalTypesPropertyChange

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Name;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cmbBoxAirports;
    private javax.swing.JComboBox cmbBoxNationality;
    private javax.swing.JComboBox cmbBoxPersonalTypes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblErrorMessage;
    private javax.swing.JTextField txtFieldBadgeNumber;
    private javax.swing.JTextField txtFieldID;
    private javax.swing.JTextField txtFieldName;
    // End of variables declaration//GEN-END:variables
}
