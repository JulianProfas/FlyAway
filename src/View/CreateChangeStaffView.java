/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CreateChangeStaffView.java
 *
 * Created on 19-jan-2010, 10:09:59
 */
package View;

import Controller.InputChecker;
import Model.AirMarshall;
import Model.Airport;
import Model.Nationality;
import Model.PersonalType;
import Model.Rank;
import Model.Staff;
import Model.User;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Jeroen
 */
public class CreateChangeStaffView extends javax.swing.JInternalFrame {

    Staff staff = null;

    /** Creates new form CreateChangeStaffView */
    public CreateChangeStaffView(Staff s) {
		initComponents();

		ArrayList<Airport> airports = Controller.Controller.Instance().getAirports();

		for (Airport a : airports) {
			cmbBoxAirports.addItem(a);
		}

		Nationality snationalities[] = Nationality.values();
		for (Nationality sn : snationalities) {
			cmbBoxNationality.addItem(sn);
		}

		staff = s;
		
		if (s != null) {
			txtFieldID.setEditable(false);
			if(s.getType() == PersonalType.AirMarshal){
				cmbBoxPersonalTypes.addItem(PersonalType.AirMarshal);
			}else{
				cmbBoxPersonalTypes.addItem(PersonalType.Pilot);
				cmbBoxPersonalTypes.addItem(PersonalType.Stewardess);
			}
			Fill(s);
		} else {
		    cmbBoxPersonalTypes.addItem(PersonalType.AirMarshal);
		    cmbBoxPersonalTypes.addItem(PersonalType.Pilot);
		    cmbBoxPersonalTypes.addItem(PersonalType.Stewardess);
			cmbBoxPersonalTypes.setSelectedItem(PersonalType.Pilot);
		}
		 
    }

    private void Fill(Staff s) {
		txtFieldID.setText("" + s.getNumber());
		txtFieldName.setText(s.getName());
		cmbBoxPersonalTypes.setSelectedItem(s.getType());
		cmbBoxAirports.setSelectedItem(s.getPrimaryAirport());
		if(s instanceof AirMarshall){
			AirMarshall a = (AirMarshall) s;
			txtFieldWeaponNumber.setText("" + a.getWeaponNumber());
			cmbBoxNationality.setSelectedItem(a.getNationality());
		}
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbBoxPersonalTypes = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txtFieldID = new javax.swing.JTextField();
        Name = new javax.swing.JLabel();
        txtFieldName = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblErrorMessage = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbBoxAirports = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtFieldWeaponNumber = new javax.swing.JTextField();
        cmbBoxNationality = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setName("Form"); // NOI18N
        setPreferredSize(new java.awt.Dimension(630, 300));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(flyaway.FlyAWayApp.class).getContext().getResourceMap(CreateChangeStaffView.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        cmbBoxPersonalTypes.setName("cmbBoxPersonalTypes"); // NOI18N
        cmbBoxPersonalTypes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbBoxPersonalTypesItemStateChanged(evt);
            }
        });
        cmbBoxPersonalTypes.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbBoxPersonalTypesPropertyChange(evt);
            }
        });

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        txtFieldID.setText(resourceMap.getString("txtFieldID.text")); // NOI18N
        txtFieldID.setName("txtFieldID"); // NOI18N

        Name.setText(resourceMap.getString("Name.text")); // NOI18N
        Name.setName("Name"); // NOI18N

        txtFieldName.setText(resourceMap.getString("txtFieldName.text")); // NOI18N
        txtFieldName.setName("txtFieldName"); // NOI18N

        btnSave.setText(resourceMap.getString("btnSave.text")); // NOI18N
        btnSave.setName("btnSave"); // NOI18N
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblErrorMessage.setName("lblErrorMessage"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        cmbBoxAirports.setName("cmbBoxAirports"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        jLabel4.setVisible(false);

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        jLabel5.setVisible(false);

        txtFieldWeaponNumber.setName("txtFieldWeaponNumber"); // NOI18N
        txtFieldWeaponNumber.setVisible(false);

        cmbBoxNationality.setName("cmbBoxNationality"); // NOI18N
        cmbBoxNationality.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel)
                .addGap(376, 376, 376))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel4)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(Name)
                            .addComponent(jLabel2)))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbBoxNationality, 0, 413, Short.MAX_VALUE)
                            .addComponent(txtFieldName, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                            .addComponent(txtFieldID, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                            .addComponent(cmbBoxAirports, 0, 413, Short.MAX_VALUE)
                            .addComponent(cmbBoxPersonalTypes, 0, 413, Short.MAX_VALUE)
                            .addComponent(txtFieldWeaponNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE))
                        .addGap(78, 78, 78))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Name))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbBoxPersonalTypes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbBoxAirports, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFieldWeaponNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbBoxNationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
		String name = txtFieldName.getText();
		int staffId = -1;
		PersonalType st = (PersonalType) cmbBoxPersonalTypes.getSelectedItem();
		Airport primaryAirport = (Airport) cmbBoxAirports.getSelectedItem();
		int weaponNumber = -1;
		Nationality nationality = (Nationality) cmbBoxNationality.getSelectedItem();

		lblErrorMessage.setText("");
		String errorMessage = "<html>";

		InputChecker ip = new InputChecker();

		try {
			staffId = Integer.parseInt(txtFieldID.getText());

			if (Controller.Controller.Instance().getStaffById(staffId) != null && staff == null) {
			errorMessage += "Staffmember already exists with personal id:" + staffId + "<br>";
			}
		} catch (NumberFormatException exception) {
			errorMessage += "Personal id is not a valid number <br>";
		}

		if (!ip.checkText(name, false, true)) {
			errorMessage += "Please enter a valid name first <br>";
		}

		if (!ip.checkMaxLength(name, 50)) {
			errorMessage += "Name has a maximum length of 50 chars <br>";
		}

		if (st == PersonalType.AirMarshal) {
			try {
				weaponNumber = Integer.parseInt(txtFieldWeaponNumber.getText());

				if(weaponNumber < 0){
					errorMessage += "Weapon number must be a positive number <br>";
				}
				
				if (Controller.Controller.Instance().getAirMarshalByBadgeNumber(weaponNumber) != null && staff == null) {
					errorMessage += "Staffmember already exists with weapon number:" + weaponNumber + "<br>";
				}
			} catch (NumberFormatException exception) {
				errorMessage += "Weapon number is not a valid number <br>";
			}
		}

		errorMessage += "</html>";

		if (errorMessage.equals("<html></html>")) {

			if(staff == null){
				
				staff = new Staff(staffId, st, name, primaryAirport);
				User u = new User("" + staffId, Rank.staff, staff);
				u.setPassword("flyaway", false);
				
				if(st == PersonalType.AirMarshal){
					AirMarshall a = new AirMarshall(weaponNumber, nationality);
					a.fillStaff(staff);
					
					if(Controller.Controller.Instance().saveObject(a) && Controller.Controller.Instance().saveObject(u)){
						
						JOptionPane.showMessageDialog(this, "Staff " + a.getName() + " Saved \n User: " + u.getUsername() + " saved");
						this.dispose();
					}else{
						JOptionPane.showMessageDialog(this, "Error while saving staff");
					}
					
				}else{
				
					if(Controller.Controller.Instance().saveObject(staff) && Controller.Controller.Instance().saveObject(u)){
						
						JOptionPane.showMessageDialog(this, "Staff " + staff.getName() + " Saved \n User: " + u.getUsername() + " saved");
						this.dispose();
					}else{
						JOptionPane.showMessageDialog(this, "Error while saving staff");
					}
				}
				
			}else{
			
				staff.setName(name);
				staff.setPrimaryAirport(primaryAirport);
				staff.setType(st);
				
				if(st == PersonalType.AirMarshal){

					AirMarshall a = (AirMarshall) staff; 
					a.setNationality(nationality);
					a.setWeaponNumber(weaponNumber);
					
					if(Controller.Controller.Instance().updateObject(a)){
						JOptionPane.showMessageDialog(this, "Staff " + a.getName() + " saved");
						this.dispose();
					}else{
						JOptionPane.showMessageDialog(this, "Error while saving staff");
					}
					
				}else{
					
					if(Controller.Controller.Instance().updateObject(staff)){
						JOptionPane.showMessageDialog(this, "Staff " + staff.getName() + " saved");
						this.dispose();
					}else{
						JOptionPane.showMessageDialog(this, "Error while saving staff");
					}
				}
				
			}
			
		} else {
			lblErrorMessage.setText(errorMessage);
		}

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
	this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void cmbBoxPersonalTypesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbBoxPersonalTypesPropertyChange
	
    }//GEN-LAST:event_cmbBoxPersonalTypesPropertyChange

	private void cmbBoxPersonalTypesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbBoxPersonalTypesItemStateChanged
		if(cmbBoxPersonalTypes.getSelectedItem() != null){
	    if(cmbBoxPersonalTypes.getSelectedItem().equals(PersonalType.AirMarshal)) {
		jLabel4.setVisible(true);
		jLabel5.setVisible(true);
		txtFieldWeaponNumber.setVisible(true);
		cmbBoxNationality.setVisible(true);
	    }else{
		jLabel4.setVisible(false);
		jLabel5.setVisible(false);
		txtFieldWeaponNumber.setVisible(false);
		cmbBoxNationality.setVisible(false);
	    }
	}
	}//GEN-LAST:event_cmbBoxPersonalTypesItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Name;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cmbBoxAirports;
    private javax.swing.JComboBox cmbBoxNationality;
    private javax.swing.JComboBox cmbBoxPersonalTypes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblErrorMessage;
    private javax.swing.JTextField txtFieldID;
    private javax.swing.JTextField txtFieldName;
    private javax.swing.JTextField txtFieldWeaponNumber;
    // End of variables declaration//GEN-END:variables
}
